#Eureka config
eureka.client.service-url.defaultZone=http://${REGISTRY_HOST}:8761/eureka/

# DATABASE PROPERTIES
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# REDIS PROPERTIES
spring.cache.type=redis
spring.cache.cache-names=dokumentCache,fakturaCache,knjizenjeCache,kontnaGrupaCache,kontoCache,sumaPotrazujeCache,sumaDugujeCache
spring.cache.redis.time-to-live=60000
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.lettuce.pool.max-active=300
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.max-wait=-1ms
spring.redis.lettuce.pool.min-idle=0

# SHARDINGSPHERE SETUP
spring.shardingsphere.datasource.names=master0,master0slave0,master0slave1

spring.shardingsphere.datasource.master0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0.url=${MYSQL_MASTER0_HOST}
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=${MYSQL_MASTER_ROOT_PASSWORD}

spring.shardingsphere.datasource.master0slave0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master0slave0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0slave0.url=${MYSQL_MASTER0_SLAVE0_HOST}
spring.shardingsphere.datasource.master0slave0.username=root
spring.shardingsphere.datasource.master0slave0.password=${MYSQL_SLAVE_ROOT_PASSWORD}
spring.shardingsphere.datasource.master0slave1.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master0slave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0slave1.url=${MYSQL_MASTER0_SLAVE1_HOST}
spring.shardingsphere.datasource.master0slave1.username=root
spring.shardingsphere.datasource.master0slave1.password=${MYSQL_SLAVE_ROOT_PASSWORD}

# KONTO
spring.shardingsphere.sharding.tables.konto.logic-table=konto
#spring.shardingsphere.sharding.tables.konto.actual-data-nodes=ds.konto$->{0..1}
#spring.shardingsphere.sharding.tables.konto.table-strategy.inline.sharding-column=kontnaGrupaId
#spring.shardingsphere.sharding.tables.konto.table-strategy.inline.algorithm-expression=konto$->{kontnaGrupaId % 2}
spring.shardingsphere.sharding.tables.konto.key-generator.column=kontoId
spring.shardingsphere.sharding.tables.konto.key-generator.type=SNOWFLAKE
# KONTO
spring.shardingsphere.sharding.tables.kontna_grupa.logic-table=kontna_grupa
spring.shardingsphere.sharding.tables.kontna_grupa.actual-data-nodes=ds.kontna_grupa$->{0..1}
spring.shardingsphere.sharding.tables.kontna_grupa.table-strategy.inline.sharding-column=kontnaGrupaId
spring.shardingsphere.sharding.tables.kontna_grupa.table-strategy.inline.algorithm-expression=kontna_grupa$->{kontnaGrupaId % 2}
spring.shardingsphere.sharding.tables.kontna_grupa.key-generator.column=kontnaGrupaId
spring.shardingsphere.sharding.tables.kontna_grupa.key-generator.type=SNOWFLAKE
# BAZNI_CENTAR
spring.shardingsphere.sharding.tables.bazni_centar.logic-table=bazni_centar
# TROSKOVNI_CENTAR
spring.shardingsphere.sharding.tables.troskovni_centar.logic-table=troskovni_centar
# PROFITNI_CENTAR
spring.shardingsphere.sharding.tables.profitni_centar.logic-table=profitni_centar
# DOKUMENT
spring.shardingsphere.sharding.tables.dokument.logic-table=dokument
#spring.shardingsphere.sharding.tables.dokument.actual-data-nodes=ds.dokument$->{0..1}
#spring.shardingsphere.sharding.tables.dokument.table-strategy.inline.sharding-column=dokumentId
#spring.shardingsphere.sharding.tables.dokument.table-strategy.inline.algorithm-expression=dokument$->{dokumentId % 2}
spring.shardingsphere.sharding.tables.dokument.key-generator.column=dokumentId
spring.shardingsphere.sharding.tables.dokument.key-generator.type=SNOWFLAKE
# FAKTURA
spring.shardingsphere.sharding.tables.faktura.logic-table=faktura
#spring.shardingsphere.sharding.tables.faktura.actual-data-nodes=ds.faktura$->{0..1}
#spring.shardingsphere.sharding.tables.faktura.table-strategy.inline.sharding-column=fakturaId
#spring.shardingsphere.sharding.tables.faktura.table-strategy.inline.algorithm-expression=faktura$->{fakturaId % 2}
# KNJIZENJE
spring.shardingsphere.sharding.tables.knjizenje.logic-table=knjizenje
spring.shardingsphere.sharding.tables.knjizenje.actual-data-nodes=ds.knjizenje$->{0..1}
spring.shardingsphere.sharding.tables.knjizenje.table-strategy.inline.sharding-column=knjizenjeId
spring.shardingsphere.sharding.tables.knjizenje.table-strategy.inline.algorithm-expression=knjizenje$->{knjizenjeId % 2}
spring.shardingsphere.sharding.tables.knjizenje.key-generator.column=knjizenjeId
spring.shardingsphere.sharding.tables.knjizenje.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.hibernate_sequence.logic-table=hibernate_sequence
# TODO Shardovanje - Konto, Broadcast - Knjizenje
spring.shardingsphere.sharding.binding-tables=kontna_grupa,knjizenje
spring.shardingsphere.sharding.broadcast-tables=t_config,bazni_centar,troskovni_centar,profitni_centar,dokument,faktura,konto

spring.shardingsphere.sharding.master-slave-rules.ds.master-data-source-name=master0
spring.shardingsphere.sharding.master-slave-rules.ds.slave-data-source-names=master0slave0, master0slave1
